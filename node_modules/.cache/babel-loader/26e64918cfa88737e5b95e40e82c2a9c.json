{"ast":null,"code":"/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\n\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super({\n      stopDown: FALSE\n    });\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n\n    this.lastAngle_ = theta;\n  }\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nexport default DragRotate;","map":{"version":3,"names":["PointerInteraction","FALSE","altShiftKeysOnly","mouseActionButton","mouseOnly","disable","DragRotate","constructor","options","stopDown","condition_","condition","lastAngle_","undefined","duration_","duration","handleDragEvent","mapBrowserEvent","map","view","getView","getConstraints","rotation","size","getSize","offset","pixel","theta","Math","atan2","delta","adjustRotationInternal","handleUpEvent","endInteraction","handleDownEvent","beginInteraction"],"sources":["D:/Work/Learning/demo/node_modules/ol/interaction/DragRotate.js"],"sourcesContent":["/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,kBAAP,MAA+B,cAA/B;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,SAHF,QAIO,wBAJP;AAKA,SAAQC,OAAR,QAAsB,0BAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBN,kBAAzB,CAA4C;EAC1C;AACF;AACA;EACEO,WAAW,CAACC,OAAD,EAAU;IACnBA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAa,EAA9B;IAEA,MAAM;MACJC,QAAQ,EAAER;IADN,CAAN;IAIA;AACJ;AACA;AACA;;IACI,KAAKS,UAAL,GAAkBF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACG,SAA5B,GAAwCT,gBAA1D;IAEA;AACJ;AACA;AACA;;IACI,KAAKU,UAAL,GAAkBC,SAAlB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,SAAL,GAAiBN,OAAO,CAACO,QAAR,KAAqBF,SAArB,GAAiCL,OAAO,CAACO,QAAzC,GAAoD,GAArE;EACD;EAED;AACF;AACA;AACA;;;EACEC,eAAe,CAACC,eAAD,EAAkB;IAC/B,IAAI,CAACb,SAAS,CAACa,eAAD,CAAd,EAAiC;MAC/B;IACD;;IAED,MAAMC,GAAG,GAAGD,eAAe,CAACC,GAA5B;IACA,MAAMC,IAAI,GAAGD,GAAG,CAACE,OAAJ,EAAb;;IACA,IAAID,IAAI,CAACE,cAAL,GAAsBC,QAAtB,KAAmCjB,OAAvC,EAAgD;MAC9C;IACD;;IACD,MAAMkB,IAAI,GAAGL,GAAG,CAACM,OAAJ,EAAb;IACA,MAAMC,MAAM,GAAGR,eAAe,CAACS,KAA/B;IACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV,GAAcE,MAAM,CAAC,CAAD,CAA/B,EAAoCA,MAAM,CAAC,CAAD,CAAN,GAAYF,IAAI,CAAC,CAAD,CAAJ,GAAU,CAA1D,CAAd;;IACA,IAAI,KAAKX,UAAL,KAAoBC,SAAxB,EAAmC;MACjC,MAAMiB,KAAK,GAAGH,KAAK,GAAG,KAAKf,UAA3B;MACAO,IAAI,CAACY,sBAAL,CAA4B,CAACD,KAA7B;IACD;;IACD,KAAKlB,UAAL,GAAkBe,KAAlB;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEK,aAAa,CAACf,eAAD,EAAkB;IAC7B,IAAI,CAACb,SAAS,CAACa,eAAD,CAAd,EAAiC;MAC/B,OAAO,IAAP;IACD;;IAED,MAAMC,GAAG,GAAGD,eAAe,CAACC,GAA5B;IACA,MAAMC,IAAI,GAAGD,GAAG,CAACE,OAAJ,EAAb;IACAD,IAAI,CAACc,cAAL,CAAoB,KAAKnB,SAAzB;IACA,OAAO,KAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEoB,eAAe,CAACjB,eAAD,EAAkB;IAC/B,IAAI,CAACb,SAAS,CAACa,eAAD,CAAd,EAAiC;MAC/B,OAAO,KAAP;IACD;;IAED,IACEd,iBAAiB,CAACc,eAAD,CAAjB,IACA,KAAKP,UAAL,CAAgBO,eAAhB,CAFF,EAGE;MACA,MAAMC,GAAG,GAAGD,eAAe,CAACC,GAA5B;MACAA,GAAG,CAACE,OAAJ,GAAce,gBAAd;MACA,KAAKvB,UAAL,GAAkBC,SAAlB;MACA,OAAO,IAAP;IACD,CARD,MAQO;MACL,OAAO,KAAP;IACD;EACF;;AA3FyC;;AA8F5C,eAAeP,UAAf"},"metadata":{},"sourceType":"module"}