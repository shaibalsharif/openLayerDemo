{"ast":null,"code":"/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString()).replace(xRegEx, tileCoord[1].toString()).replace(yRegEx, tileCoord[2].toString()).replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n      }\n    }\n  );\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\n\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n\n    return urls;\n  }\n\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n\n    return urls;\n  }\n\n  urls.push(url);\n  return urls;\n}","map":{"version":3,"names":["assert","modulo","hash","tileCoordHash","createFromTemplate","template","tileGrid","zRegEx","xRegEx","yRegEx","dashYRegEx","tileCoord","pixelRatio","projection","undefined","replace","toString","z","range","getFullTileRange","y","getHeight","createFromTemplates","templates","len","length","tileUrlFunctions","Array","i","createFromTileUrlFunctions","h","index","nullTileUrlFunction","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","String","fromCharCode","stop","parseInt"],"sources":["D:/Work/Learning/demo/node_modules/ol/tileurlfunction.js"],"sourcesContent":["/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}