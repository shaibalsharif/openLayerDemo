{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\n\nexport const defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\n\nexport const defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\n\nexport const defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport const defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\n\nexport const defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\n\nexport const defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\n\nexport const defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\n\nexport const defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {CanvasTextAlign}\n */\n\nexport const defaultTextAlign = 'center';\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\n\nexport const defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport const defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\n\nexport const defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\n\nexport const checkedFonts = new BaseObject();\n/**\n * @type {CanvasRenderingContext2D}\n */\n\nlet measureContext = null;\n/**\n * @type {string}\n */\n\nlet measureFont;\n/**\n * @type {!Object<string, number>}\n */\n\nexport const textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n\nexport const registerFont = function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text); // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n\n        available = available && width != referenceWidth;\n      }\n    }\n\n    if (available) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights); // Make sure that loaded fonts are picked up by Safari\n\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n\n    if (!font) {\n      return;\n    }\n\n    const families = font.families;\n\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\n\nexport const measureTextHeight = function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Å½g');\n        const lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n        height = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n\n      textHeights[fontSpec] = height;\n    }\n\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\n\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n\n  return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n\n\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\n\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n\n  const width = text.split('\\n').reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\n\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n\n  return {\n    width,\n    height,\n    widths,\n    heights,\n    lineWidths\n  };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\n\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (\n  /** @type {*} */\n  labelOrImage.contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(\n    /** @type {Label} */\n    labelOrImage, context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n    /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */\n    labelOrImage, originX, originY, w, h, 0, 0, w, h);\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n    /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */\n    labelOrImage, originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n  }\n\n  context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\n\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}","map":{"version":3,"names":["BaseObject","WORKER_OFFSCREEN_CANVAS","clear","createCanvasContext2D","getFontParameters","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","retries","size","referenceFonts","len","length","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","i","referenceFont","measureTextWidth","width","check","done","fonts","getKeys","ii","font","get","apply","split","undefined","set","clearInterval","fontSpec","families","family","key","style","weight","setInterval","measureTextHeight","measureElement","height","metrics","measureText","lineHeight","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","document","createElement","innerHTML","minHeight","maxHeight","padding","border","position","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","cache","reduce","prev","curr","Math","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","push","currentWidth","currentHeight","rotateAtOffset","context","rotation","offsetX","offsetY","translate","rotate","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","Array","isArray"],"sources":["D:/Work/Learning/demo/node_modules/ol/render/canvas.js"],"sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Å½g');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,cAAvB;AACA,SAAQC,uBAAR,QAAsC,WAAtC;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,SAAQC,qBAAR,QAAoC,WAApC;AACA,SAAQC,iBAAR,QAAgC,WAAhC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,iBAApB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAzB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,OAAvB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,EAAxB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAA9B;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,OAAxB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,EAA1B;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAA3B;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,QAAzB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,mBAAmB,GAAG,QAA5B;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAvB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAAzB;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,IAAIjB,UAAJ,EAArB;AAEP;AACA;AACA;;AACA,IAAIkB,cAAc,GAAG,IAArB;AAEA;AACA;AACA;;AACA,IAAIC,WAAJ;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,EAApB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAI,YAAY;EACvC,MAAMC,OAAO,GAAG,GAAhB;EACA,MAAMC,IAAI,GAAG,OAAb;EACA,MAAMC,cAAc,GAAG,CAAC,WAAD,EAAc,OAAd,CAAvB;EACA,MAAMC,GAAG,GAAGD,cAAc,CAACE,MAA3B;EACA,MAAMC,IAAI,GAAG,+BAAb;EACA,IAAIC,QAAJ,EAAcC,cAAd;EAEA;AACF;AACA;AACA;AACA;AACA;;EACE,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,UAA5C,EAAwD;IACtD,IAAIC,SAAS,GAAG,IAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAApB,EAAyB,EAAEU,CAA3B,EAA8B;MAC5B,MAAMC,aAAa,GAAGZ,cAAc,CAACW,CAAD,CAApC;MACAN,cAAc,GAAGQ,gBAAgB,CAC/BN,SAAS,GAAG,GAAZ,GAAkBC,UAAlB,GAA+B,GAA/B,GAAqCT,IAArC,GAA4Ca,aADb,EAE/BT,IAF+B,CAAjC;;MAIA,IAAIM,UAAU,IAAIG,aAAlB,EAAiC;QAC/B,MAAME,KAAK,GAAGD,gBAAgB,CAC5BN,SAAS,GACP,GADF,GAEEC,UAFF,GAGE,GAHF,GAIET,IAJF,GAKEU,UALF,GAME,GANF,GAOEG,aAR0B,EAS5BT,IAT4B,CAA9B,CAD+B,CAY/B;QACA;;QACAO,SAAS,GAAGA,SAAS,IAAII,KAAK,IAAIT,cAAlC;MACD;IACF;;IACD,IAAIK,SAAJ,EAAe;MACb,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD;;EAED,SAASK,KAAT,GAAiB;IACf,IAAIC,IAAI,GAAG,IAAX;IACA,MAAMC,KAAK,GAAGxB,YAAY,CAACyB,OAAb,EAAd;;IACA,KAAK,IAAIP,CAAC,GAAG,CAAR,EAAWQ,EAAE,GAAGF,KAAK,CAACf,MAA3B,EAAmCS,CAAC,GAAGQ,EAAvC,EAA2C,EAAER,CAA7C,EAAgD;MAC9C,MAAMS,IAAI,GAAGH,KAAK,CAACN,CAAD,CAAlB;;MACA,IAAIlB,YAAY,CAAC4B,GAAb,CAAiBD,IAAjB,IAAyBtB,OAA7B,EAAsC;QACpC,IAAIQ,WAAW,CAACgB,KAAZ,CAAkB,IAAlB,EAAwBF,IAAI,CAACG,KAAL,CAAW,IAAX,CAAxB,CAAJ,EAA+C;UAC7C7C,KAAK,CAACkB,WAAD,CAAL,CAD6C,CAE7C;;UACAF,cAAc,GAAG,IAAjB;UACAC,WAAW,GAAG6B,SAAd;UACA/B,YAAY,CAACgC,GAAb,CAAiBL,IAAjB,EAAuBtB,OAAvB;QACD,CAND,MAMO;UACLL,YAAY,CAACgC,GAAb,CAAiBL,IAAjB,EAAuB3B,YAAY,CAAC4B,GAAb,CAAiBD,IAAjB,IAAyB,CAAhD,EAAmD,IAAnD;UACAJ,IAAI,GAAG,KAAP;QACD;MACF;IACF;;IACD,IAAIA,IAAJ,EAAU;MACRU,aAAa,CAACtB,QAAD,CAAb;MACAA,QAAQ,GAAGoB,SAAX;IACD;EACF;;EAED,OAAO,UAAUG,QAAV,EAAoB;IACzB,MAAMP,IAAI,GAAGxC,iBAAiB,CAAC+C,QAAD,CAA9B;;IACA,IAAI,CAACP,IAAL,EAAW;MACT;IACD;;IACD,MAAMQ,QAAQ,GAAGR,IAAI,CAACQ,QAAtB;;IACA,KAAK,IAAIjB,CAAC,GAAG,CAAR,EAAWQ,EAAE,GAAGS,QAAQ,CAAC1B,MAA9B,EAAsCS,CAAC,GAAGQ,EAA1C,EAA8C,EAAER,CAAhD,EAAmD;MACjD,MAAMkB,MAAM,GAAGD,QAAQ,CAACjB,CAAD,CAAvB;MACA,MAAMmB,GAAG,GAAGV,IAAI,CAACW,KAAL,GAAa,IAAb,GAAoBX,IAAI,CAACY,MAAzB,GAAkC,IAAlC,GAAyCH,MAArD;;MACA,IAAIpC,YAAY,CAAC4B,GAAb,CAAiBS,GAAjB,MAA0BN,SAA9B,EAAyC;QACvC/B,YAAY,CAACgC,GAAb,CAAiBK,GAAjB,EAAsBhC,OAAtB,EAA+B,IAA/B;;QACA,IAAI,CAACQ,WAAW,CAACc,IAAI,CAACW,KAAN,EAAaX,IAAI,CAACY,MAAlB,EAA0BH,MAA1B,CAAhB,EAAmD;UACjDpC,YAAY,CAACgC,GAAb,CAAiBK,GAAjB,EAAsB,CAAtB,EAAyB,IAAzB;;UACA,IAAI1B,QAAQ,KAAKoB,SAAjB,EAA4B;YAC1BpB,QAAQ,GAAG6B,WAAW,CAAClB,KAAD,EAAQ,EAAR,CAAtB;UACD;QACF;MACF;IACF;EACF,CAnBD;AAoBD,CAzF2B,EAArB;AA2FP;AACA;AACA;AACA;;AACA,OAAO,MAAMmB,iBAAiB,GAAI,YAAY;EAC5C;AACF;AACA;EACE,IAAIC,cAAJ;EACA,OAAO,UAAUR,QAAV,EAAoB;IACzB,IAAIS,MAAM,GAAGxC,WAAW,CAAC+B,QAAD,CAAxB;;IACA,IAAIS,MAAM,IAAIZ,SAAd,EAAyB;MACvB,IAAI/C,uBAAJ,EAA6B;QAC3B,MAAM2C,IAAI,GAAGxC,iBAAiB,CAAC+C,QAAD,CAA9B;QACA,MAAMU,OAAO,GAAGC,WAAW,CAACX,QAAD,EAAW,IAAX,CAA3B;QACA,MAAMY,UAAU,GAAGC,KAAK,CAACC,MAAM,CAACrB,IAAI,CAACmB,UAAN,CAAP,CAAL,GACf,GADe,GAEfE,MAAM,CAACrB,IAAI,CAACmB,UAAN,CAFV;QAGAH,MAAM,GACJG,UAAU,IACTF,OAAO,CAACK,uBAAR,GAAkCL,OAAO,CAACM,wBADjC,CADZ;MAGD,CATD,MASO;QACL,IAAI,CAACR,cAAL,EAAqB;UACnBA,cAAc,GAAGS,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;UACAV,cAAc,CAACW,SAAf,GAA2B,GAA3B;UACAX,cAAc,CAACJ,KAAf,CAAqBgB,SAArB,GAAiC,GAAjC;UACAZ,cAAc,CAACJ,KAAf,CAAqBiB,SAArB,GAAiC,MAAjC;UACAb,cAAc,CAACJ,KAAf,CAAqBK,MAArB,GAA8B,MAA9B;UACAD,cAAc,CAACJ,KAAf,CAAqBkB,OAArB,GAA+B,GAA/B;UACAd,cAAc,CAACJ,KAAf,CAAqBmB,MAArB,GAA8B,MAA9B;UACAf,cAAc,CAACJ,KAAf,CAAqBoB,QAArB,GAAgC,UAAhC;UACAhB,cAAc,CAACJ,KAAf,CAAqBqB,OAArB,GAA+B,OAA/B;UACAjB,cAAc,CAACJ,KAAf,CAAqBsB,IAArB,GAA4B,UAA5B;QACD;;QACDlB,cAAc,CAACJ,KAAf,CAAqBX,IAArB,GAA4BO,QAA5B;QACAiB,QAAQ,CAACU,IAAT,CAAcC,WAAd,CAA0BpB,cAA1B;QACAC,MAAM,GAAGD,cAAc,CAACqB,YAAxB;QACAZ,QAAQ,CAACU,IAAT,CAAcG,WAAd,CAA0BtB,cAA1B;MACD;;MACDvC,WAAW,CAAC+B,QAAD,CAAX,GAAwBS,MAAxB;IACD;;IACD,OAAOA,MAAP;EACD,CAjCD;AAkCD,CAvCgC,EAA1B;AAyCP;AACA;AACA;AACA;AACA;;AACA,SAASE,WAAT,CAAqBlB,IAArB,EAA2BjB,IAA3B,EAAiC;EAC/B,IAAI,CAACT,cAAL,EAAqB;IACnBA,cAAc,GAAGf,qBAAqB,CAAC,CAAD,EAAI,CAAJ,CAAtC;EACD;;EACD,IAAIyC,IAAI,IAAIzB,WAAZ,EAAyB;IACvBD,cAAc,CAAC0B,IAAf,GAAsBA,IAAtB;IACAzB,WAAW,GAAGD,cAAc,CAAC0B,IAA7B;EACD;;EACD,OAAO1B,cAAc,CAAC4C,WAAf,CAA2BnC,IAA3B,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASU,gBAAT,CAA0BO,IAA1B,EAAgCjB,IAAhC,EAAsC;EAC3C,OAAOmC,WAAW,CAAClB,IAAD,EAAOjB,IAAP,CAAX,CAAwBW,KAA/B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAS4C,wBAAT,CAAkCtC,IAAlC,EAAwCjB,IAAxC,EAA8CwD,KAA9C,EAAqD;EAC1D,IAAIxD,IAAI,IAAIwD,KAAZ,EAAmB;IACjB,OAAOA,KAAK,CAACxD,IAAD,CAAZ;EACD;;EACD,MAAMW,KAAK,GAAGX,IAAI,CACfoB,KADW,CACL,IADK,EAEXqC,MAFW,CAEJ,CAACC,IAAD,EAAOC,IAAP,KAAgBC,IAAI,CAACC,GAAL,CAASH,IAAT,EAAehD,gBAAgB,CAACO,IAAD,EAAO0C,IAAP,CAA/B,CAFZ,EAE0D,CAF1D,CAAd;EAGAH,KAAK,CAACxD,IAAD,CAAL,GAAcW,KAAd;EACA,OAAOA,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASmD,iBAAT,CAA2BC,SAA3B,EAAsCC,MAAtC,EAA8C;EACnD,MAAMC,MAAM,GAAG,EAAf;EACA,MAAMC,OAAO,GAAG,EAAhB;EACA,MAAMC,UAAU,GAAG,EAAnB;EACA,IAAIxD,KAAK,GAAG,CAAZ;EACA,IAAIyD,SAAS,GAAG,CAAhB;EACA,IAAInC,MAAM,GAAG,CAAb;EACA,IAAIG,UAAU,GAAG,CAAjB;;EACA,KAAK,IAAI5B,CAAC,GAAG,CAAR,EAAWQ,EAAE,GAAGgD,MAAM,CAACjE,MAA5B,EAAoCS,CAAC,IAAIQ,EAAzC,EAA6CR,CAAC,IAAI,CAAlD,EAAqD;IACnD,MAAMR,IAAI,GAAGgE,MAAM,CAACxD,CAAD,CAAnB;;IACA,IAAIR,IAAI,KAAK,IAAT,IAAiBQ,CAAC,KAAKQ,EAA3B,EAA+B;MAC7BL,KAAK,GAAGiD,IAAI,CAACC,GAAL,CAASlD,KAAT,EAAgByD,SAAhB,CAAR;MACAD,UAAU,CAACE,IAAX,CAAgBD,SAAhB;MACAA,SAAS,GAAG,CAAZ;MACAnC,MAAM,IAAIG,UAAV;MACA;IACD;;IACD,MAAMnB,IAAI,GAAG+C,MAAM,CAACxD,CAAC,GAAG,CAAL,CAAN,IAAiBuD,SAAS,CAAC9C,IAAxC;IACA,MAAMqD,YAAY,GAAG5D,gBAAgB,CAACO,IAAD,EAAOjB,IAAP,CAArC;IACAiE,MAAM,CAACI,IAAP,CAAYC,YAAZ;IACAF,SAAS,IAAIE,YAAb;IACA,MAAMC,aAAa,GAAGxC,iBAAiB,CAACd,IAAD,CAAvC;IACAiD,OAAO,CAACG,IAAR,CAAaE,aAAb;IACAnC,UAAU,GAAGwB,IAAI,CAACC,GAAL,CAASzB,UAAT,EAAqBmC,aAArB,CAAb;EACD;;EACD,OAAO;IAAC5D,KAAD;IAAQsB,MAAR;IAAgBgC,MAAhB;IAAwBC,OAAxB;IAAiCC;EAAjC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6D;EAClE,IAAIF,QAAQ,KAAK,CAAjB,EAAoB;IAClBD,OAAO,CAACI,SAAR,CAAkBF,OAAlB,EAA2BC,OAA3B;IACAH,OAAO,CAACK,MAAR,CAAeJ,QAAf;IACAD,OAAO,CAACI,SAAR,CAAkB,CAACF,OAAnB,EAA4B,CAACC,OAA7B;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,gBAAT,CACLN,OADK,EAELO,SAFK,EAGLC,OAHK,EAILC,YAJK,EAKLC,OALK,EAMLC,OANK,EAOLC,CAPK,EAQLC,CARK,EASLC,CATK,EAULC,CAVK,EAWLC,KAXK,EAYL;EACAhB,OAAO,CAACiB,IAAR;;EAEA,IAAIT,OAAO,KAAK,CAAhB,EAAmB;IACjBR,OAAO,CAACkB,WAAR,IAAuBV,OAAvB;EACD;;EACD,IAAID,SAAJ,EAAe;IACbP,OAAO,CAACmB,YAAR,CAAqBzE,KAArB,CAA2BsD,OAA3B,EAAoCO,SAApC;EACD;;EAED;EAAI;EAAkBE,YAAD,CAAeW,mBAApC,EAAyD;IACvD;IACApB,OAAO,CAACI,SAAR,CAAkBU,CAAlB,EAAqBC,CAArB;IACAf,OAAO,CAACgB,KAAR,CAAcA,KAAK,CAAC,CAAD,CAAnB,EAAwBA,KAAK,CAAC,CAAD,CAA7B;IACAK,wBAAwB;IAAC;IAAsBZ,YAAvB,EAAsCT,OAAtC,CAAxB;EACD,CALD,MAKO,IAAIgB,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,IAAgBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAA/B,EAAkC;IACvC;IACAhB,OAAO,CAACI,SAAR,CAAkBU,CAAlB,EAAqBC,CAArB;IACAf,OAAO,CAACgB,KAAR,CAAcA,KAAK,CAAC,CAAD,CAAnB,EAAwBA,KAAK,CAAC,CAAD,CAA7B;IACAhB,OAAO,CAACsB,SAAR;IACE;IACEb,YAFJ,EAIEC,OAJF,EAKEC,OALF,EAMEC,CANF,EAOEC,CAPF,EAQE,CARF,EASE,CATF,EAUED,CAVF,EAWEC,CAXF;EAaD,CAjBM,MAiBA;IACL;IACAb,OAAO,CAACsB,SAAR;IACE;IACEb,YAFJ,EAIEC,OAJF,EAKEC,OALF,EAMEC,CANF,EAOEC,CAPF,EAQEC,CARF,EASEC,CATF,EAUEH,CAAC,GAAGI,KAAK,CAAC,CAAD,CAVX,EAWEH,CAAC,GAAGG,KAAK,CAAC,CAAD,CAXX;EAaD;;EAEDhB,OAAO,CAACuB,OAAR;AACD;AAED;AACA;AACA;AACA;;AACA,SAASF,wBAAT,CAAkCG,KAAlC,EAAyCxB,OAAzC,EAAkD;EAChD,MAAMoB,mBAAmB,GAAGI,KAAK,CAACJ,mBAAlC;;EACA,KAAK,IAAIrF,CAAC,GAAG,CAAR,EAAWQ,EAAE,GAAG6E,mBAAmB,CAAC9F,MAAzC,EAAiDS,CAAC,GAAGQ,EAArD,EAAyDR,CAAC,IAAI,CAA9D,EAAiE;IAC/D,IAAI0F,KAAK,CAACC,OAAN,CAAcN,mBAAmB,CAACrF,CAAC,GAAG,CAAL,CAAjC,CAAJ,EAA+C;MAC7CiE,OAAO,CAACoB,mBAAmB,CAACrF,CAAD,CAApB,CAAP,CAAgCW,KAAhC,CACEsD,OADF,EAEEoB,mBAAmB,CAACrF,CAAC,GAAG,CAAL,CAFrB;IAID,CALD,MAKO;MACLiE,OAAO,CAACoB,mBAAmB,CAACrF,CAAD,CAApB,CAAP,GAAkCqF,mBAAmB,CAACrF,CAAC,GAAG,CAAL,CAArD;IACD;EACF;AACF"},"metadata":{},"sourceType":"module"}