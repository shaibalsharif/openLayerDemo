{"ast":null,"code":"/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, coordinates) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n\n  coordinates.length = i;\n  return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\n\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatess) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n\n  coordinatess.length = i;\n  return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\n\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, coordinatesss) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = ends.length === 1 && ends[0] === offset ? [] : inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n\n  coordinatesss.length = i;\n  return coordinatesss;\n}","map":{"version":3,"names":["inflateCoordinates","flatCoordinates","offset","end","stride","coordinates","undefined","i","j","slice","length","inflateCoordinatesArray","ends","coordinatess","jj","inflateMultiCoordinatesArray","endss","coordinatesss"],"sources":["D:/Work/Learning/demo/node_modules/ol/geom/flat/inflate.js"],"sourcesContent":["/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAT,CACLC,eADK,EAELC,MAFK,EAGLC,GAHK,EAILC,MAJK,EAKLC,WALK,EAML;EACAA,WAAW,GAAGA,WAAW,KAAKC,SAAhB,GAA4BD,WAA5B,GAA0C,EAAxD;EACA,IAAIE,CAAC,GAAG,CAAR;;EACA,KAAK,IAAIC,CAAC,GAAGN,MAAb,EAAqBM,CAAC,GAAGL,GAAzB,EAA8BK,CAAC,IAAIJ,MAAnC,EAA2C;IACzCC,WAAW,CAACE,CAAC,EAAF,CAAX,GAAmBN,eAAe,CAACQ,KAAhB,CAAsBD,CAAtB,EAAyBA,CAAC,GAAGJ,MAA7B,CAAnB;EACD;;EACDC,WAAW,CAACK,MAAZ,GAAqBH,CAArB;EACA,OAAOF,WAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,uBAAT,CACLV,eADK,EAELC,MAFK,EAGLU,IAHK,EAILR,MAJK,EAKLS,YALK,EAML;EACAA,YAAY,GAAGA,YAAY,KAAKP,SAAjB,GAA6BO,YAA7B,GAA4C,EAA3D;EACA,IAAIN,CAAC,GAAG,CAAR;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWM,EAAE,GAAGF,IAAI,CAACF,MAA1B,EAAkCF,CAAC,GAAGM,EAAtC,EAA0C,EAAEN,CAA5C,EAA+C;IAC7C,MAAML,GAAG,GAAGS,IAAI,CAACJ,CAAD,CAAhB;IACAK,YAAY,CAACN,CAAC,EAAF,CAAZ,GAAoBP,kBAAkB,CACpCC,eADoC,EAEpCC,MAFoC,EAGpCC,GAHoC,EAIpCC,MAJoC,EAKpCS,YAAY,CAACN,CAAD,CALwB,CAAtC;IAOAL,MAAM,GAAGC,GAAT;EACD;;EACDU,YAAY,CAACH,MAAb,GAAsBH,CAAtB;EACA,OAAOM,YAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,4BAAT,CACLd,eADK,EAELC,MAFK,EAGLc,KAHK,EAILZ,MAJK,EAKLa,aALK,EAML;EACAA,aAAa,GAAGA,aAAa,KAAKX,SAAlB,GAA8BW,aAA9B,GAA8C,EAA9D;EACA,IAAIV,CAAC,GAAG,CAAR;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWM,EAAE,GAAGE,KAAK,CAACN,MAA3B,EAAmCF,CAAC,GAAGM,EAAvC,EAA2C,EAAEN,CAA7C,EAAgD;IAC9C,MAAMI,IAAI,GAAGI,KAAK,CAACR,CAAD,CAAlB;IACAS,aAAa,CAACV,CAAC,EAAF,CAAb,GACEK,IAAI,CAACF,MAAL,KAAgB,CAAhB,IAAqBE,IAAI,CAAC,CAAD,CAAJ,KAAYV,MAAjC,GACI,EADJ,GAEIS,uBAAuB,CACrBV,eADqB,EAErBC,MAFqB,EAGrBU,IAHqB,EAIrBR,MAJqB,EAKrBa,aAAa,CAACV,CAAD,CALQ,CAH7B;IAUAL,MAAM,GAAGU,IAAI,CAACA,IAAI,CAACF,MAAL,GAAc,CAAf,CAAb;EACD;;EACDO,aAAa,CAACP,MAAd,GAAuBH,CAAvB;EACA,OAAOU,aAAP;AACD"},"metadata":{},"sourceType":"module"}