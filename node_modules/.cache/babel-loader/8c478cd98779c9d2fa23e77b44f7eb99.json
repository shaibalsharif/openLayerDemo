{"ast":null,"code":"/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\n\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    const pointerOptions =\n    /** @type {import(\"./Pointer.js\").Options} */\n    options;\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n\n    this.anchor_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastDistance_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.lastScaleDelta_ = 1;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY; // distance between touches\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n\n    this.lastDistance_ = distance;\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    } // scale anchor point.\n\n\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid); // scale, bypass the resolution constraint\n\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nexport default PinchZoom;","map":{"version":3,"names":["PointerInteraction","centroid","centroidFromPointers","FALSE","PinchZoom","constructor","options","pointerOptions","stopDown","anchor_","duration_","duration","undefined","lastDistance_","lastScaleDelta_","handleDragEvent","mapBrowserEvent","scaleDelta","touch0","targetPointers","touch1","dx","clientX","dy","clientY","distance","Math","sqrt","map","view","getView","viewportPosition","getViewport","getBoundingClientRect","left","top","getCoordinateFromPixelInternal","render","adjustResolutionInternal","handleUpEvent","length","direction","endInteraction","handleDownEvent","handlingDownUpSequence","beginInteraction"],"sources":["D:/Work/Learning/demo/node_modules/ol/interaction/PinchZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}