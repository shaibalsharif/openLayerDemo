{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Learning\\\\demo\\\\src\\\\components\\\\NewMpComponent.js\",\n    _s = $RefreshSig$();\n\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMS from 'ol/source/TileWMS';\nimport View from 'ol/View';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewMpComponent = _ref => {\n  _s();\n\n  let {\n    lat = 23.811056,\n    long = 90.407608,\n    zoom = 3\n  } = _ref;\n  // const layers = [\n  //     new TileLayer({\n  //       source: new OSM(),\n  //     }),\n  //     new TileLayer({\n  //       extent: [-13884991, 2870341, -7455066, 6338219],\n  //       source: new TileWMS({\n  //         url: 'https://ahocevar.com/geoserver/wms',\n  //         params: {'LAYERS': 'topp:states', 'TILED': true},\n  //         serverType: 'geoserver',\n  //         // Countries have transparency, so do not fade tiles:\n  //         transition: 0,\n  //       }),\n  //     }),\n  //   ];\n  const map = new Map({\n    controls: [],\n    target: '',\n    view: new View({\n      // center: [lat, long],\n      center: [-10997148, 4569099],\n      zoom: zoom //   projection: \"EPSG:4326\",\n\n    })\n  });\n  map.on('click', e => {\n    console.log(e); //console.log(\"Latitude \",e.coordinate[0],\"  Longititude: \",e.coordinate[1]);\n  });\n  var osmFile = new TileLayer({\n    title: \"Open Street Map\",\n    visible: true,\n    source: new OSM()\n  });\n  map.addLayer(osmFile); // var IndiaShp = new TileLayer({\n  //     title: \"India file\",\n  //     source: new TileWMS({\n  //         url: '../dummy.shp',\n  //         visible: true,\n  //     })\n  // })\n  // map.addLayer(IndiaShp)\n\n  map.addLayer(new TileLayer({\n    extent: [-13884991, 2870341, -7455066, 6338219],\n    source: new TileWMS({\n      url: 'https://ahocevar.com/geoserver/wms',\n      params: {\n        'LAYERS': 'topp:states',\n        'TILED': true\n      },\n      serverType: 'geoserver',\n      // Countries have transparency, so do not fade tiles:\n      transition: 0\n    })\n  })); // map.addLayer( new TileLayer({\n  //     extent: [-13884991, 2870341, -7455066, 6338219],\n  //     source: new TileWMS({\n  //       url: 'https://ahocevar.com/geoserver/wms',\n  //       params: {'LAYERS': 'topp:cities', 'TILED': true},\n  //       serverType: 'geoserver',\n  //       // Countries have transparency, so do not fade tiles:\n  //       transition: 0,\n  //     }),\n  //   }),\n  // )\n\n  useEffect(() => {\n    let elm = document.getElementById('map'); // console.log(elm.children);\n\n    if (elm.childElementCount > 1) elm.innerHTML = \"\";\n    map.setTarget(\"map\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"w-[100vw] h-[100vh]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewMpComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = NewMpComponent;\nexport default NewMpComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMpComponent\");","map":{"version":3,"names":["Map","OSM","TileLayer","TileWMS","View","useEffect","NewMpComponent","lat","long","zoom","map","controls","target","view","center","on","e","console","log","osmFile","title","visible","source","addLayer","extent","url","params","serverType","transition","elm","document","getElementById","childElementCount","innerHTML","setTarget"],"sources":["D:/Work/Learning/demo/src/components/NewMpComponent.js"],"sourcesContent":["import Map from 'ol/Map';\r\nimport OSM from 'ol/source/OSM';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport View from 'ol/View';\r\nimport { useEffect } from 'react';\r\nconst NewMpComponent = ({ lat = 23.811056, long = 90.407608, zoom = 3 }) => {\r\n    // const layers = [\r\n    //     new TileLayer({\r\n    //       source: new OSM(),\r\n    //     }),\r\n    //     new TileLayer({\r\n    //       extent: [-13884991, 2870341, -7455066, 6338219],\r\n    //       source: new TileWMS({\r\n    //         url: 'https://ahocevar.com/geoserver/wms',\r\n    //         params: {'LAYERS': 'topp:states', 'TILED': true},\r\n    //         serverType: 'geoserver',\r\n    //         // Countries have transparency, so do not fade tiles:\r\n    //         transition: 0,\r\n    //       }),\r\n    //     }),\r\n    //   ];\r\n    const map = new Map({\r\n        controls:[],\r\n        target: '',\r\n        view: new View({\r\n            // center: [lat, long],\r\n            center: [-10997148, 4569099],\r\n            zoom: zoom,\r\n         //   projection: \"EPSG:4326\",\r\n        })\r\n    });\r\n    map.on('click', (e) => {\r\n        console.log(e);\r\n        //console.log(\"Latitude \",e.coordinate[0],\"  Longititude: \",e.coordinate[1]);\r\n    })\r\n\r\n    var osmFile = new TileLayer({\r\n        title: \"Open Street Map\",\r\n        visible: true,\r\n        source: new OSM(),\r\n    })\r\n    map.addLayer(osmFile);\r\n\r\n    // var IndiaShp = new TileLayer({\r\n    //     title: \"India file\",\r\n    //     source: new TileWMS({\r\n    //         url: '../dummy.shp',\r\n    //         visible: true,\r\n    //     })\r\n    // })\r\n    // map.addLayer(IndiaShp)\r\n\r\n    map.addLayer( new TileLayer({\r\n        extent: [-13884991, 2870341, -7455066, 6338219],\r\n        source: new TileWMS({\r\n          url: 'https://ahocevar.com/geoserver/wms',\r\n          params: {'LAYERS': 'topp:states', 'TILED': true},\r\n          serverType: 'geoserver',\r\n          // Countries have transparency, so do not fade tiles:\r\n          transition: 0,\r\n        }),\r\n      }),\r\n    )\r\n    // map.addLayer( new TileLayer({\r\n    //     extent: [-13884991, 2870341, -7455066, 6338219],\r\n    //     source: new TileWMS({\r\n    //       url: 'https://ahocevar.com/geoserver/wms',\r\n    //       params: {'LAYERS': 'topp:cities', 'TILED': true},\r\n    //       serverType: 'geoserver',\r\n    //       // Countries have transparency, so do not fade tiles:\r\n    //       transition: 0,\r\n    //     }),\r\n    //   }),\r\n    // )\r\n    useEffect(() => {\r\n        let elm = document.getElementById('map');\r\n       // console.log(elm.children);\r\n        if (elm.childElementCount>1)\r\n            elm.innerHTML = \"\";\r\n        map.setTarget(\"map\")\r\n    }, [])\r\n    return (\r\n        <div className=\"map-container\">\r\n\r\n\r\n            <div id='map' className='w-[100vw] h-[100vh]'>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMpComponent"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AACA,MAAMC,cAAc,GAAG,QAAqD;EAAA;;EAAA,IAApD;IAAEC,GAAG,GAAG,SAAR;IAAmBC,IAAI,GAAG,SAA1B;IAAqCC,IAAI,GAAG;EAA5C,CAAoD;EACxE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,GAAG,GAAG,IAAIV,GAAJ,CAAQ;IAChBW,QAAQ,EAAC,EADO;IAEhBC,MAAM,EAAE,EAFQ;IAGhBC,IAAI,EAAE,IAAIT,IAAJ,CAAS;MACX;MACAU,MAAM,EAAE,CAAC,CAAC,QAAF,EAAY,OAAZ,CAFG;MAGXL,IAAI,EAAEA,IAHK,CAId;;IAJc,CAAT;EAHU,CAAR,CAAZ;EAUAC,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAiBC,CAAD,IAAO;IACnBC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADmB,CAEnB;EACH,CAHD;EAKA,IAAIG,OAAO,GAAG,IAAIjB,SAAJ,CAAc;IACxBkB,KAAK,EAAE,iBADiB;IAExBC,OAAO,EAAE,IAFe;IAGxBC,MAAM,EAAE,IAAIrB,GAAJ;EAHgB,CAAd,CAAd;EAKAS,GAAG,CAACa,QAAJ,CAAaJ,OAAb,EApCwE,CAsCxE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAT,GAAG,CAACa,QAAJ,CAAc,IAAIrB,SAAJ,CAAc;IACxBsB,MAAM,EAAE,CAAC,CAAC,QAAF,EAAY,OAAZ,EAAqB,CAAC,OAAtB,EAA+B,OAA/B,CADgB;IAExBF,MAAM,EAAE,IAAInB,OAAJ,CAAY;MAClBsB,GAAG,EAAE,oCADa;MAElBC,MAAM,EAAE;QAAC,UAAU,aAAX;QAA0B,SAAS;MAAnC,CAFU;MAGlBC,UAAU,EAAE,WAHM;MAIlB;MACAC,UAAU,EAAE;IALM,CAAZ;EAFgB,CAAd,CAAd,EA/CwE,CA0DxE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACAvB,SAAS,CAAC,MAAM;IACZ,IAAIwB,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAV,CADY,CAEb;;IACC,IAAIF,GAAG,CAACG,iBAAJ,GAAsB,CAA1B,EACIH,GAAG,CAACI,SAAJ,GAAgB,EAAhB;IACJvB,GAAG,CAACwB,SAAJ,CAAc,KAAd;EACH,CANQ,EAMN,EANM,CAAT;EAOA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,uBAGI;MAAK,EAAE,EAAC,KAAR;MAAc,SAAS,EAAC;IAAxB;MAAA;MAAA;MAAA;IAAA;EAHJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAvFD;;GAAM5B,c;;KAAAA,c;AAyFN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}