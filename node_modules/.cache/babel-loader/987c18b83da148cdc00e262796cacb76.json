{"ast":null,"code":"/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\n\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains (x, y).\n   */\n  function (coordinate) {\n    return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n  });\n  return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n\n    offset = ends[ends.length - 1];\n  }\n\n  return false;\n}","map":{"version":3,"names":["forEachCorner","linearRingContainsExtent","flatCoordinates","offset","end","stride","extent","outside","coordinate","linearRingContainsXY","x","y","wn","x1","y1","x2","y2","linearRingsContainsXY","ends","length","i","ii","linearRingssContainsXY","endss"],"sources":["D:/Work/Learning/demo/node_modules/ol/geom/flat/contains.js"],"sourcesContent":["/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,aAAR,QAA4B,iBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CACLC,eADK,EAELC,MAFK,EAGLC,GAHK,EAILC,MAJK,EAKLC,MALK,EAML;EACA,MAAMC,OAAO,GAAGP,aAAa,CAC3BM,MAD2B;EAE3B;AACJ;AACA;AACA;EACI,UAAUE,UAAV,EAAsB;IACpB,OAAO,CAACC,oBAAoB,CAC1BP,eAD0B,EAE1BC,MAF0B,EAG1BC,GAH0B,EAI1BC,MAJ0B,EAK1BG,UAAU,CAAC,CAAD,CALgB,EAM1BA,UAAU,CAAC,CAAD,CANgB,CAA5B;EAQD,CAf0B,CAA7B;EAiBA,OAAO,CAACD,OAAR;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,oBAAT,CACLP,eADK,EAELC,MAFK,EAGLC,GAHK,EAILC,MAJK,EAKLK,CALK,EAMLC,CANK,EAOL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIC,EAAE,GAAG,CAAT;EACA,IAAIC,EAAE,GAAGX,eAAe,CAACE,GAAG,GAAGC,MAAP,CAAxB;EACA,IAAIS,EAAE,GAAGZ,eAAe,CAACE,GAAG,GAAGC,MAAN,GAAe,CAAhB,CAAxB;;EACA,OAAOF,MAAM,GAAGC,GAAhB,EAAqBD,MAAM,IAAIE,MAA/B,EAAuC;IACrC,MAAMU,EAAE,GAAGb,eAAe,CAACC,MAAD,CAA1B;IACA,MAAMa,EAAE,GAAGd,eAAe,CAACC,MAAM,GAAG,CAAV,CAA1B;;IACA,IAAIW,EAAE,IAAIH,CAAV,EAAa;MACX,IAAIK,EAAE,GAAGL,CAAL,IAAU,CAACI,EAAE,GAAGF,EAAN,KAAaF,CAAC,GAAGG,EAAjB,IAAuB,CAACJ,CAAC,GAAGG,EAAL,KAAYG,EAAE,GAAGF,EAAjB,CAAvB,GAA8C,CAA5D,EAA+D;QAC7DF,EAAE;MACH;IACF,CAJD,MAIO,IAAII,EAAE,IAAIL,CAAN,IAAW,CAACI,EAAE,GAAGF,EAAN,KAAaF,CAAC,GAAGG,EAAjB,IAAuB,CAACJ,CAAC,GAAGG,EAAL,KAAYG,EAAE,GAAGF,EAAjB,CAAvB,GAA8C,CAA7D,EAAgE;MACrEF,EAAE;IACH;;IACDC,EAAE,GAAGE,EAAL;IACAD,EAAE,GAAGE,EAAL;EACD;;EACD,OAAOJ,EAAE,KAAK,CAAd;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,qBAAT,CACLf,eADK,EAELC,MAFK,EAGLe,IAHK,EAILb,MAJK,EAKLK,CALK,EAMLC,CANK,EAOL;EACA,IAAIO,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;IACrB,OAAO,KAAP;EACD;;EACD,IAAI,CAACV,oBAAoB,CAACP,eAAD,EAAkBC,MAAlB,EAA0Be,IAAI,CAAC,CAAD,CAA9B,EAAmCb,MAAnC,EAA2CK,CAA3C,EAA8CC,CAA9C,CAAzB,EAA2E;IACzE,OAAO,KAAP;EACD;;EACD,KAAK,IAAIS,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGH,IAAI,CAACC,MAA1B,EAAkCC,CAAC,GAAGC,EAAtC,EAA0C,EAAED,CAA5C,EAA+C;IAC7C,IACEX,oBAAoB,CAACP,eAAD,EAAkBgB,IAAI,CAACE,CAAC,GAAG,CAAL,CAAtB,EAA+BF,IAAI,CAACE,CAAD,CAAnC,EAAwCf,MAAxC,EAAgDK,CAAhD,EAAmDC,CAAnD,CADtB,EAEE;MACA,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASW,sBAAT,CACLpB,eADK,EAELC,MAFK,EAGLoB,KAHK,EAILlB,MAJK,EAKLK,CALK,EAMLC,CANK,EAOL;EACA,IAAIY,KAAK,CAACJ,MAAN,KAAiB,CAArB,EAAwB;IACtB,OAAO,KAAP;EACD;;EACD,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGE,KAAK,CAACJ,MAA3B,EAAmCC,CAAC,GAAGC,EAAvC,EAA2C,EAAED,CAA7C,EAAgD;IAC9C,MAAMF,IAAI,GAAGK,KAAK,CAACH,CAAD,CAAlB;;IACA,IAAIH,qBAAqB,CAACf,eAAD,EAAkBC,MAAlB,EAA0Be,IAA1B,EAAgCb,MAAhC,EAAwCK,CAAxC,EAA2CC,CAA3C,CAAzB,EAAwE;MACtE,OAAO,IAAP;IACD;;IACDR,MAAM,GAAGe,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAb;EACD;;EACD,OAAO,KAAP;AACD"},"metadata":{},"sourceType":"module"}