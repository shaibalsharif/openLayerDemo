{"ast":null,"code":"/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\n\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    this.on;\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    this.once;\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n\n\n    this.map_ = null;\n    this.setActive(true);\n  }\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n\n\n  getActive() {\n    return (\n      /** @type {boolean} */\n      this.get(InteractionProperty.ACTIVE)\n    );\n  }\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n\n\n  getMap() {\n    return this.map_;\n  }\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n\n\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n\n\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n\n\n  setMap(map) {\n    this.map_ = map;\n  }\n\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\n\n\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center)\n    });\n  }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\n\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut\n  });\n}\nexport default Interaction;","map":{"version":3,"names":["BaseObject","InteractionProperty","easeOut","linear","Interaction","constructor","options","on","once","un","handleEvent","map_","setActive","getActive","get","ACTIVE","getMap","mapBrowserEvent","active","set","setMap","map","pan","view","delta","duration","currentCenter","getCenterInternal","center","animateInternal","undefined","easing","getConstrainedCenter","zoomByDelta","anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","resolution"],"sources":["D:/Work/Learning/demo/node_modules/ol/interaction/Interaction.js"],"sourcesContent":["/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}