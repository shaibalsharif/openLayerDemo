{"ast":null,"code":"import Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMS from 'ol/source/TileWMS';\nimport View from 'ol/View';\nimport LayerSwitcher from 'ol-layerswitcher'; // const layers = [\n//     new TileLayer({\n//         source: new OSM(),\n//     }),\n//     new TileLayer({\n//         extent: [-13884991, 2870341, -7455066, 6338219],\n//         source: new TileWMS({\n//             url: 'https://ahocevar.com/geoserver/wms',\n//             params: { 'LAYERS': 'topp:states', 'TILED': true },\n//             serverType: 'geoserver',\n//             // Countries have transparency, so do not fade tiles:\n//             transition: 0,\n//         }),\n//     }),\n// ];\n\nexport const setInitMap = (view, layer, clickStatus) => {\n  let x = document.getElementById('map'); // console.log(x);\n\n  const map = new Map({\n    // layers: layers,\n    // layers:[\n    //     new TileLayer({z\n    //         source: new OSM(),\n    //       })\n    // ],\n    target: '',\n    view: view ? new View({\n      center: [view['lon'], view['lat']],\n      zoom: view['zoom'],\n      projection: view.projection\n    }) : new View({\n      center: [90.41607886403209, 23.82399061856948],\n      zoom: 12.70,\n      projection: 'EPSG:4326'\n    })\n  });\n  map.on('pointermove', e => {\n    let el = document.getElementById('bottomInfo');\n    el.innerHTML = `Lat: ${e.coordinate[0].toFixed(4)} | Lon: ${e.coordinate[1].toFixed(4)}`;\n  });\n\n  if (clickStatus) {\n    map.on('click', e => {\n      let f = document.getElementById('popup'); // f.offsetLeft= e.coordinate[1]\n      // f.offsetTop= e.coordinate[0]\n      // console.log(e);\n\n      f.style.display = \"block\";\n\n      if (e.pixel[1] < 50) {\n        f.style.top = `${e.pixel[1]}px`;\n        f.style.left = `${e.pixel[0]}px`;\n      } else {\n        f.style.top = `${e.pixel[1] - 50}px`;\n        f.style.left = `${e.pixel[0]}px`;\n      }\n\n      console.log(e.pixel[1]);\n      f.style.opacity = .8;\n      f.style.zIndex = 2;\n\n      if (e.coordinate) {\n        f.childNodes[1].childNodes[0].innerHTML = `Lat: ${e.coordinate[0].toFixed(4)}`;\n        f.childNodes[1].childNodes[1].innerHTML = `Lon: ${e.coordinate[1].toFixed(4)}`;\n      } //  console.log(f.childNodes[1].childNodes[0]);\n      //console.log(\"Latitude \",e.coordinate[0],\"  Longititude: \",e.coordinate[1]);\n\n    });\n  }\n\n  map.addLayer(new TileLayer({\n    source: new OSM()\n  }));\n\n  if (layer) {\n    map.addLayer(layer);\n    map.on('singleclick', e => {\n      let url = layer.getSource().getFeatureInfoUrl(e.coordinate, viewResolution, viewProjection, {\n        'INFO_FORMAT': 'text/html',\n        'propertyName': 'formal_en'\n      });\n\n      if (url) {\n        fetch(url).then(res => {\n          console.log(res);\n        });\n      }\n    });\n  }\n\n  const layerSwitcher = new LayerSwitcher();\n  map.addControl(layerSwitcher);\n  return map;\n}; //export default map;","map":{"version":3,"names":["Map","OSM","TileLayer","TileWMS","View","LayerSwitcher","setInitMap","view","layer","clickStatus","x","document","getElementById","map","target","center","zoom","projection","on","e","el","innerHTML","coordinate","toFixed","f","style","display","pixel","top","left","console","log","opacity","zIndex","childNodes","addLayer","source","url","getSource","getFeatureInfoUrl","viewResolution","viewProjection","fetch","then","res","layerSwitcher","addControl"],"sources":["D:/Work/Learning/demo/src/utils/initMap.js"],"sourcesContent":["import Map from 'ol/Map';\r\nimport OSM from 'ol/source/OSM';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport View from 'ol/View';\r\nimport LayerSwitcher from 'ol-layerswitcher';\r\n\r\n\r\n// const layers = [\r\n//     new TileLayer({\r\n//         source: new OSM(),\r\n//     }),\r\n//     new TileLayer({\r\n//         extent: [-13884991, 2870341, -7455066, 6338219],\r\n//         source: new TileWMS({\r\n//             url: 'https://ahocevar.com/geoserver/wms',\r\n//             params: { 'LAYERS': 'topp:states', 'TILED': true },\r\n//             serverType: 'geoserver',\r\n//             // Countries have transparency, so do not fade tiles:\r\n//             transition: 0,\r\n//         }),\r\n//     }),\r\n// ];\r\n\r\nexport const setInitMap = (view, layer, clickStatus) => {\r\n    let x = document.getElementById('map');\r\n    // console.log(x);\r\n    const map = new Map({\r\n\r\n        // layers: layers,\r\n        // layers:[\r\n        //     new TileLayer({z\r\n        //         source: new OSM(),\r\n        //       })\r\n        // ],\r\n        target: '',\r\n        view: view ? new View({\r\n            center: [view['lon'], view['lat']],\r\n            zoom: view['zoom'],\r\n            projection: view.projection,\r\n        }) : new View({\r\n            center: [90.41607886403209, 23.82399061856948],\r\n            zoom: 12.70,\r\n            projection: 'EPSG:4326',\r\n        })\r\n\r\n    });\r\n    map.on('pointermove', (e) => {\r\n\r\n        let el = document.getElementById('bottomInfo');\r\n\r\n        el.innerHTML = `Lat: ${e.coordinate[0].toFixed(4)} | Lon: ${e.coordinate[1].toFixed(4)}`\r\n    })\r\n\r\n    if (clickStatus) {\r\n        map.on('click', (e) => {\r\n            let f = document.getElementById('popup')\r\n\r\n\r\n\r\n            // f.offsetLeft= e.coordinate[1]\r\n            // f.offsetTop= e.coordinate[0]\r\n            // console.log(e);\r\n            f.style.display = \"block\"\r\n            if (e.pixel[1] < 50) {\r\n\r\n                f.style.top = `${e.pixel[1]}px`\r\n                f.style.left = `${e.pixel[0]}px`\r\n            }\r\n            else {\r\n                f.style.top = `${e.pixel[1] - 50}px`\r\n                f.style.left = `${e.pixel[0]}px`\r\n            }\r\n            console.log(e.pixel[1]);\r\n            f.style.opacity = .8\r\n            f.style.zIndex = 2\r\n            if (e.coordinate) {\r\n                f.childNodes[1].childNodes[0].innerHTML = `Lat: ${e.coordinate[0].toFixed(4)}`\r\n                f.childNodes[1].childNodes[1].innerHTML = `Lon: ${e.coordinate[1].toFixed(4)}`\r\n            }\r\n            //  console.log(f.childNodes[1].childNodes[0]);\r\n\r\n            //console.log(\"Latitude \",e.coordinate[0],\"  Longititude: \",e.coordinate[1]);\r\n        })\r\n    }\r\n\r\n    map.addLayer(new TileLayer({\r\n        source: new OSM(),\r\n    }))\r\n    if (layer) {\r\n        map.addLayer(layer)\r\n        map.on('singleclick', (e) => {\r\n            let url = layer.getSource().getFeatureInfoUrl(\r\n                e.coordinate, viewResolution, viewProjection,\r\n                {\r\n                    'INFO_FORMAT': 'text/html',\r\n                    'propertyName': 'formal_en'\r\n                }\r\n            )\r\n            if (url) {\r\n                fetch(url)\r\n                    .then((res) => {\r\n                        console.log(res);\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    const layerSwitcher = new LayerSwitcher()\r\n    map.addControl(layerSwitcher);\r\n    return map\r\n}\r\n//export default map;"],"mappings":"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"},"metadata":{},"sourceType":"module"}