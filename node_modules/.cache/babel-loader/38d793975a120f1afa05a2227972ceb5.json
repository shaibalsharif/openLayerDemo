{"ast":null,"code":"import Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMS from 'ol/source/TileWMS';\nimport View from 'ol/View';\nimport LayerSwitcher from 'ol-layerswitcher'; // const layers = [\n//     new TileLayer({\n//         source: new OSM(),\n//     }),\n//     new TileLayer({\n//         extent: [-13884991, 2870341, -7455066, 6338219],\n//         source: new TileWMS({\n//             url: 'https://ahocevar.com/geoserver/wms',\n//             params: { 'LAYERS': 'topp:states', 'TILED': true },\n//             serverType: 'geoserver',\n//             // Countries have transparency, so do not fade tiles:\n//             transition: 0,\n//         }),\n//     }),\n// ];\n\nexport const setInitMap = (view, layer, clickStatus) => {\n  let x = document.getElementById('map'); // console.log(x);\n\n  const map = new Map({\n    // layers: layers,\n    // layers:[\n    //     new TileLayer({z\n    //         source: new OSM(),\n    //       })\n    // ],\n    target: '',\n    view: view ? new View({\n      center: [view['lon'], view['lat']],\n      zoom: view['zoom'],\n      projection: view.projection\n    }) : new View({\n      center: [90.41607886403209, 23.82399061856948],\n      zoom: 12.70,\n      projection: 'EPSG:4326'\n    })\n  });\n\n  if (clickStatus) {\n    map.on('click', e => {\n      let f = document.getElementById('popup'); // f.offsetLeft= e.coordinate[1]\n      // f.offsetTop= e.coordinate[0]\n      // console.log(e);\n\n      f.offsetLeft = -20;\n      console.log(f.offsetLeft); //console.log(\"Latitude \",e.coordinate[0],\"  Longititude: \",e.coordinate[1]);\n    });\n  }\n\n  map.addLayer(new TileLayer({\n    source: new OSM()\n  }));\n\n  if (layer) {\n    map.addLayer(layer);\n  }\n\n  const layerSwitcher = new LayerSwitcher();\n  map.addControl(layerSwitcher);\n  return map;\n}; //export default map;","map":{"version":3,"names":["Map","OSM","TileLayer","TileWMS","View","LayerSwitcher","setInitMap","view","layer","clickStatus","x","document","getElementById","map","target","center","zoom","projection","on","e","f","offsetLeft","console","log","addLayer","source","layerSwitcher","addControl"],"sources":["D:/Work/Learning/demo/src/utils/initMap.js"],"sourcesContent":["import Map from 'ol/Map';\r\nimport OSM from 'ol/source/OSM';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport View from 'ol/View';\r\nimport LayerSwitcher from 'ol-layerswitcher';\r\n\r\n\r\n// const layers = [\r\n//     new TileLayer({\r\n//         source: new OSM(),\r\n//     }),\r\n//     new TileLayer({\r\n//         extent: [-13884991, 2870341, -7455066, 6338219],\r\n//         source: new TileWMS({\r\n//             url: 'https://ahocevar.com/geoserver/wms',\r\n//             params: { 'LAYERS': 'topp:states', 'TILED': true },\r\n//             serverType: 'geoserver',\r\n//             // Countries have transparency, so do not fade tiles:\r\n//             transition: 0,\r\n//         }),\r\n//     }),\r\n// ];\r\n\r\nexport const setInitMap = (view, layer, clickStatus) => {\r\n    let x = document.getElementById('map');\r\n    // console.log(x);\r\n    const map = new Map({\r\n\r\n        // layers: layers,\r\n        // layers:[\r\n        //     new TileLayer({z\r\n        //         source: new OSM(),\r\n        //       })\r\n        // ],\r\n        target: '',\r\n        view: view ? new View({\r\n            center: [view['lon'], view['lat']],\r\n            zoom: view['zoom'],\r\n            projection: view.projection,\r\n        }) : new View({\r\n            center: [90.41607886403209, 23.82399061856948],\r\n            zoom: 12.70,\r\n            projection: 'EPSG:4326',\r\n        })\r\n\r\n    });\r\n    if (clickStatus) {\r\n        map.on('click', (e) => {\r\n            let f=document.getElementById('popup')\r\n            // f.offsetLeft= e.coordinate[1]\r\n            // f.offsetTop= e.coordinate[0]\r\n            // console.log(e);\r\n            f.offsetLeft=-20;\r\n            console.log(f.offsetLeft);\r\n\r\n            //console.log(\"Latitude \",e.coordinate[0],\"  Longititude: \",e.coordinate[1]);\r\n        })\r\n    }\r\n\r\n    map.addLayer(new TileLayer({\r\n        source: new OSM(),\r\n    }))\r\n    if (layer) {\r\n        map.addLayer(layer)\r\n    }\r\n\r\n    const layerSwitcher = new LayerSwitcher()\r\n    map.addControl(layerSwitcher);\r\n    return map\r\n}\r\n//export default map;"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,WAAd,KAA8B;EACpD,IAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAR,CADoD,CAEpD;;EACA,MAAMC,GAAG,GAAG,IAAIb,GAAJ,CAAQ;IAEhB;IACA;IACA;IACA;IACA;IACA;IACAc,MAAM,EAAE,EARQ;IAShBP,IAAI,EAAEA,IAAI,GAAG,IAAIH,IAAJ,CAAS;MAClBW,MAAM,EAAE,CAACR,IAAI,CAAC,KAAD,CAAL,EAAcA,IAAI,CAAC,KAAD,CAAlB,CADU;MAElBS,IAAI,EAAET,IAAI,CAAC,MAAD,CAFQ;MAGlBU,UAAU,EAAEV,IAAI,CAACU;IAHC,CAAT,CAAH,GAIL,IAAIb,IAAJ,CAAS;MACVW,MAAM,EAAE,CAAC,iBAAD,EAAoB,iBAApB,CADE;MAEVC,IAAI,EAAE,KAFI;MAGVC,UAAU,EAAE;IAHF,CAAT;EAbW,CAAR,CAAZ;;EAoBA,IAAIR,WAAJ,EAAiB;IACbI,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAiBC,CAAD,IAAO;MACnB,IAAIC,CAAC,GAACT,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAN,CADmB,CAEnB;MACA;MACA;;MACAQ,CAAC,CAACC,UAAF,GAAa,CAAC,EAAd;MACAC,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,UAAd,EANmB,CAQnB;IACH,CATD;EAUH;;EAEDR,GAAG,CAACW,QAAJ,CAAa,IAAItB,SAAJ,CAAc;IACvBuB,MAAM,EAAE,IAAIxB,GAAJ;EADe,CAAd,CAAb;;EAGA,IAAIO,KAAJ,EAAW;IACPK,GAAG,CAACW,QAAJ,CAAahB,KAAb;EACH;;EAED,MAAMkB,aAAa,GAAG,IAAIrB,aAAJ,EAAtB;EACAQ,GAAG,CAACc,UAAJ,CAAeD,aAAf;EACA,OAAOb,GAAP;AACH,CA9CM,C,CA+CP"},"metadata":{},"sourceType":"module"}