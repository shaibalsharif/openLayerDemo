{"ast":null,"code":"/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\n\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.cacheSize_ = 0;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.maxCacheSize_ = 32;\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n  /**\n   * @return {boolean} Can expire cache.\n   */\n\n\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n\n\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n\n\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n\n\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n\n}\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\n\n\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\n\nexport const shared = new IconImageCache();","map":{"version":3,"names":["asString","IconImageCache","constructor","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","i","key","iconImage","hasListener","get","src","crossOrigin","color","getKey","set","setSize","maxCacheSize","colorString","shared"],"sources":["D:/Work/Learning/demo/node_modules/ol/style/IconImageCache.js"],"sourcesContent":["/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,QAAR,QAAuB,aAAvB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,CAAqB;EACnBC,WAAW,GAAG;IACZ;AACJ;AACA;AACA;IACI,KAAKC,MAAL,GAAc,EAAd;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,UAAL,GAAkB,CAAlB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,aAAL,GAAqB,EAArB;EACD;EAED;AACF;AACA;;;EACEC,KAAK,GAAG;IACN,KAAKH,MAAL,GAAc,EAAd;IACA,KAAKC,UAAL,GAAkB,CAAlB;EACD;EAED;AACF;AACA;;;EACEG,cAAc,GAAG;IACf,OAAO,KAAKH,UAAL,GAAkB,KAAKC,aAA9B;EACD;EAED;AACF;AACA;;;EACEG,MAAM,GAAG;IACP,IAAI,KAAKD,cAAL,EAAJ,EAA2B;MACzB,IAAIE,CAAC,GAAG,CAAR;;MACA,KAAK,MAAMC,GAAX,IAAkB,KAAKP,MAAvB,EAA+B;QAC7B,MAAMQ,SAAS,GAAG,KAAKR,MAAL,CAAYO,GAAZ,CAAlB;;QACA,IAAI,CAACD,CAAC,KAAK,CAAP,MAAc,CAAd,IAAmB,CAACE,SAAS,CAACC,WAAV,EAAxB,EAAiD;UAC/C,OAAO,KAAKT,MAAL,CAAYO,GAAZ,CAAP;UACA,EAAE,KAAKN,UAAP;QACD;MACF;IACF;EACF;EAED;AACF;AACA;AACA;AACA;AACA;;;EACES,GAAG,CAACC,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,EAA0B;IAC3B,MAAMN,GAAG,GAAGO,MAAM,CAACH,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,CAAlB;IACA,OAAON,GAAG,IAAI,KAAKP,MAAZ,GAAqB,KAAKA,MAAL,CAAYO,GAAZ,CAArB,GAAwC,IAA/C;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEQ,GAAG,CAACJ,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,EAA0BL,SAA1B,EAAqC;IACtC,MAAMD,GAAG,GAAGO,MAAM,CAACH,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,CAAlB;IACA,KAAKb,MAAL,CAAYO,GAAZ,IAAmBC,SAAnB;IACA,EAAE,KAAKP,UAAP;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEe,OAAO,CAACC,YAAD,EAAe;IACpB,KAAKf,aAAL,GAAqBe,YAArB;IACA,KAAKZ,MAAL;EACD;;AArFkB;AAwFrB;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,MAAT,CAAgBH,GAAhB,EAAqBC,WAArB,EAAkCC,KAAlC,EAAyC;EACvC,MAAMK,WAAW,GAAGL,KAAK,GAAGhB,QAAQ,CAACgB,KAAD,CAAX,GAAqB,MAA9C;EACA,OAAOD,WAAW,GAAG,GAAd,GAAoBD,GAApB,GAA0B,GAA1B,GAAgCO,WAAvC;AACD;;AAED,eAAepB,cAAf;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMqB,MAAM,GAAG,IAAIrB,cAAJ,EAAf"},"metadata":{},"sourceType":"module"}