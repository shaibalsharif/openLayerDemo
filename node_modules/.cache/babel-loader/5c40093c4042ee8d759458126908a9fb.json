{"ast":null,"code":"/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\n\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    });\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n\n\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view =\n    /** @type {!import(\"../View.js\").default} */\n    map.getView();\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut\n    });\n  }\n\n}\n\nexport default DragZoom;","map":{"version":3,"names":["DragBox","easeOut","shiftKeyOnly","DragZoom","constructor","options","condition","className","minArea","duration_","duration","undefined","out_","out","onBoxEnd","event","map","getMap","view","getView","geometry","getGeometry","rotatedExtent","rotatedExtentForGeometry","resolution","getResolutionForExtentInternal","factor","getResolution","clone","scale","fitInternal","easing"],"sources":["D:/Work/Learning/demo/node_modules/ol/interaction/DragZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,SAAuBH,OAAvB,CAA+B;EAC7B;AACF;AACA;EACEI,WAAW,CAACC,OAAD,EAAU;IACnBA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAa,EAA9B;IAEA,MAAMC,SAAS,GAAGD,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAA5B,GAAwCJ,YAA1D;IAEA,MAAM;MACJI,SAAS,EAAEA,SADP;MAEJC,SAAS,EAAEF,OAAO,CAACE,SAAR,IAAqB,aAF5B;MAGJC,OAAO,EAAEH,OAAO,CAACG;IAHb,CAAN;IAMA;AACJ;AACA;AACA;;IACI,KAAKC,SAAL,GAAiBJ,OAAO,CAACK,QAAR,KAAqBC,SAArB,GAAiCN,OAAO,CAACK,QAAzC,GAAoD,GAArE;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,IAAL,GAAYP,OAAO,CAACQ,GAAR,KAAgBF,SAAhB,GAA4BN,OAAO,CAACQ,GAApC,GAA0C,KAAtD;EACD;EAED;AACF;AACA;AACA;;;EACEC,QAAQ,CAACC,KAAD,EAAQ;IACd,MAAMC,GAAG,GAAG,KAAKC,MAAL,EAAZ;IACA,MAAMC,IAAI;IAAG;IAA8CF,GAAG,CAACG,OAAJ,EAA3D;IACA,IAAIC,QAAQ,GAAG,KAAKC,WAAL,EAAf;;IAEA,IAAI,KAAKT,IAAT,EAAe;MACb,MAAMU,aAAa,GAAGJ,IAAI,CAACK,wBAAL,CAA8BH,QAA9B,CAAtB;MACA,MAAMI,UAAU,GAAGN,IAAI,CAACO,8BAAL,CAAoCH,aAApC,CAAnB;MACA,MAAMI,MAAM,GAAGR,IAAI,CAACS,aAAL,KAAuBH,UAAtC;MACAJ,QAAQ,GAAGA,QAAQ,CAACQ,KAAT,EAAX;MACAR,QAAQ,CAACS,KAAT,CAAeH,MAAM,GAAGA,MAAxB;IACD;;IAEDR,IAAI,CAACY,WAAL,CAAiBV,QAAjB,EAA2B;MACzBV,QAAQ,EAAE,KAAKD,SADU;MAEzBsB,MAAM,EAAE9B;IAFiB,CAA3B;EAID;;AAjD4B;;AAoD/B,eAAeE,QAAf"},"metadata":{},"sourceType":"module"}