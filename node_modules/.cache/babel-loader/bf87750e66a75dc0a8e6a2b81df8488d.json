{"ast":null,"code":"/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\n\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n\n    this.layer = layer;\n  }\n\n}\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\n\nconst Property = {\n  LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\n\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions =\n    /** @type {Options} */\n    Object.assign({}, options);\n    delete baseOptions.layers;\n    let layers = options.layers;\n    super(baseOptions);\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    this.on;\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    this.once;\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n\n    this.un;\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n\n    this.layersListenerKeys_ = [];\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n\n    this.listenerKeys_ = {};\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof\n        /** @type {?} */\n        layers.getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n\n    this.setLayers(layers);\n  }\n  /**\n   * @private\n   */\n\n\n  handleLayerChange_() {\n    this.changed();\n  }\n  /**\n   * @private\n   */\n\n\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n\n    clear(this.listenerKeys_);\n    const layersArray = layers.getArray();\n\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n\n    this.changed();\n  }\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n\n\n  registerLayerListeners_(layer) {\n    const listenerKeys = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(listen(layer, 'addlayer', this.handleLayerGroupAdd_, this), listen(layer, 'removelayer', this.handleLayerGroupRemove_, this));\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n\n\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n\n\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  getLayers() {\n    return (\n      /** @type {!Collection<import(\"./Base.js\").default>} */\n      this.get(Property.LAYERS)\n    );\n  }\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  setLayers(layers) {\n    const collection = this.getLayers();\n\n    if (collection) {\n      const currentLayers = collection.getArray();\n\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n\n\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n\n\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n\n\n  getSourceState() {\n    return 'ready';\n  }\n\n}\n\nexport default LayerGroup;","map":{"version":3,"names":["BaseLayer","Collection","CollectionEventType","Event","EventType","ObjectEventType","assert","clear","getIntersection","getUid","listen","unlistenByKey","GroupEvent","constructor","type","layer","Property","LAYERS","LayerGroup","options","baseOptions","Object","assign","layers","on","once","un","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","slice","unique","getArray","undefined","setLayers","handleLayerChange_","changed","forEach","length","getLayers","push","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","id","layersArray","i","ii","registerLayerListeners_","dispatchEvent","listenerKeys","PROPERTYCHANGE","CHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","event","collectionEvent","element","key","get","collection","currentLayers","set","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","zIndex","layerState","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getSourceState"],"sources":["D:/Work/Learning/demo/node_modules/ol/layer/Group.js"],"sourcesContent":["/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}